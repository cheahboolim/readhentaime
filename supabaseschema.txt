-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ads (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  position text NOT NULL,
  html text,
  enabled boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT ads_pkey PRIMARY KEY (id)
);
CREATE TABLE public.artists (
  id integer NOT NULL DEFAULT nextval('artists_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text UNIQUE,
  CONSTRAINT artists_pkey PRIMARY KEY (id)
);
CREATE TABLE public.categories (
  id integer NOT NULL DEFAULT nextval('categories_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text UNIQUE,
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.characters (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  CONSTRAINT characters_pkey PRIMARY KEY (id)
);
CREATE TABLE public.groups (
  id integer NOT NULL DEFAULT nextval('groups_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text UNIQUE,
  CONSTRAINT groups_pkey PRIMARY KEY (id)
);
CREATE TABLE public.languages (
  id integer NOT NULL DEFAULT nextval('languages_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text UNIQUE,
  CONSTRAINT languages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.manga (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  manga_id text NOT NULL,
  title text NOT NULL,
  feature_image_url text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT manga_pkey PRIMARY KEY (id)
);
CREATE TABLE public.manga_artists (
  manga_id uuid NOT NULL,
  artist_id integer NOT NULL,
  CONSTRAINT manga_artists_pkey PRIMARY KEY (manga_id, artist_id),
  CONSTRAINT manga_artists_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id),
  CONSTRAINT manga_artists_artist_id_fkey FOREIGN KEY (artist_id) REFERENCES public.artists(id)
);
CREATE TABLE public.manga_categories (
  manga_id uuid NOT NULL,
  category_id integer NOT NULL,
  CONSTRAINT manga_categories_pkey PRIMARY KEY (category_id, manga_id),
  CONSTRAINT manga_categories_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id),
  CONSTRAINT manga_categories_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.manga_characters (
  manga_id uuid NOT NULL,
  character_id uuid NOT NULL,
  CONSTRAINT manga_characters_pkey PRIMARY KEY (character_id, manga_id),
  CONSTRAINT manga_characters_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id),
  CONSTRAINT manga_characters_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.manga_groups (
  manga_id uuid NOT NULL,
  group_id integer NOT NULL,
  CONSTRAINT manga_groups_pkey PRIMARY KEY (group_id, manga_id),
  CONSTRAINT manga_groups_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id),
  CONSTRAINT manga_groups_group_id_fkey FOREIGN KEY (group_id) REFERENCES public.groups(id)
);
CREATE TABLE public.manga_languages (
  manga_id uuid NOT NULL,
  language_id integer NOT NULL,
  CONSTRAINT manga_languages_pkey PRIMARY KEY (language_id, manga_id),
  CONSTRAINT manga_languages_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id),
  CONSTRAINT manga_languages_language_id_fkey FOREIGN KEY (language_id) REFERENCES public.languages(id)
);
CREATE TABLE public.manga_parodies (
  manga_id uuid NOT NULL,
  parody_id integer NOT NULL,
  CONSTRAINT manga_parodies_pkey PRIMARY KEY (manga_id, parody_id),
  CONSTRAINT manga_parodies_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id),
  CONSTRAINT manga_parodies_parody_id_fkey FOREIGN KEY (parody_id) REFERENCES public.parodies(id)
);
CREATE TABLE public.manga_tags (
  manga_id uuid NOT NULL,
  tag_id integer NOT NULL,
  CONSTRAINT manga_tags_pkey PRIMARY KEY (manga_id, tag_id),
  CONSTRAINT manga_tags_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id),
  CONSTRAINT manga_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.tags(id)
);
CREATE TABLE public.pages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  manga_id uuid,
  page_number integer NOT NULL,
  image_url text NOT NULL,
  CONSTRAINT pages_pkey PRIMARY KEY (id),
  CONSTRAINT pages_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id)
);
CREATE TABLE public.parodies (
  id integer NOT NULL DEFAULT nextval('parodies_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text UNIQUE,
  CONSTRAINT parodies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.slug_map (
  slug text NOT NULL,
  manga_id uuid,
  CONSTRAINT slug_map_pkey PRIMARY KEY (slug),
  CONSTRAINT slug_map_manga_id_fkey FOREIGN KEY (manga_id) REFERENCES public.manga(id)
);
CREATE TABLE public.tags (
  id integer NOT NULL DEFAULT nextval('tags_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  slug text UNIQUE,
  CONSTRAINT tags_pkey PRIMARY KEY (id)
);